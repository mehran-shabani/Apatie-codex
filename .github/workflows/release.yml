name: Release Automation

on:
  push:
    branches:
      - main
  workflow_dispatch:
  release:
    types:
      - published

permissions:
  contents: read

jobs:
  release-please:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Run Release Please
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: simple
          package-name: apatie-codex
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-artifacts:
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_REPO="${GITHUB_REPOSITORY,,}"
          IMAGE_NAME="ghcr.io/${IMAGE_REPO}:${{ github.event.release.tag_name }}"
          docker build -t "$IMAGE_NAME" .
          docker push "$IMAGE_NAME"
      - name: Upload changelog asset
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CHANGELOG_FILE="CHANGELOG-${{ github.event.release.tag_name }}.md"
          echo "# Release ${{ github.event.release.tag_name }}" > "$CHANGELOG_FILE"
          printf '\nThis file can be replaced with curated release notes.\n' >> "$CHANGELOG_FILE"
          gh release upload "${{ github.event.release.tag_name }}" "$CHANGELOG_FILE" --repo "${{ github.repository }}" --clobber

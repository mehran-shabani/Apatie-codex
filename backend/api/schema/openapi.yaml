openapi: 3.0.3
info:
  title: Apatie API
  version: 1.0.0
  description: Comprehensive API specification for the Apatie platform.
  contact:
    name: Apatie
    email: support@apatie.example
  license:
    name: Proprietary
paths:
  /api/auth/jwt/create/:
    post:
      operationId: api_auth_jwt_create_create
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/jwt/refresh/:
    post:
      operationId: api_auth_jwt_refresh_create
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/appointments/:
    get:
      operationId: appointments_list
      description: Viewset for appointments.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - appointments
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentAutoList'
          description: ''
    post:
      operationId: appointments_create
      description: Viewset for appointments.
      tags:
      - appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentAuto'
          description: ''
  /api/v1/appointments/{id}/:
    get:
      operationId: appointments_retrieve
      description: Viewset for appointments.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - appointments
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentAuto'
          description: ''
    put:
      operationId: appointments_update
      description: Viewset for appointments.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentAuto'
          description: ''
    patch:
      operationId: appointments_partial_update
      description: Viewset for appointments.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentAutoRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentAuto'
          description: ''
    delete:
      operationId: appointments_destroy
      description: Viewset for appointments.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - appointments
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/businesses/:
    get:
      operationId: businesses_list
      description: Viewset for business profiles.
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      tags:
      - businesses
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBusinessProfileAutoList'
          description: ''
    post:
      operationId: businesses_create
      description: Viewset for business profiles.
      tags:
      - businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessProfileAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessProfileAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessProfileAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProfileAuto'
          description: ''
  /api/v1/businesses/{id}/:
    get:
      operationId: businesses_retrieve
      description: Viewset for business profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this business profile.
        required: true
      tags:
      - businesses
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProfileAuto'
          description: ''
    put:
      operationId: businesses_update
      description: Viewset for business profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this business profile.
        required: true
      tags:
      - businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessProfileAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessProfileAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessProfileAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProfileAuto'
          description: ''
    patch:
      operationId: businesses_partial_update
      description: Viewset for business profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this business profile.
        required: true
      tags:
      - businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessProfileAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessProfileAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessProfileAutoRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProfileAuto'
          description: ''
    delete:
      operationId: businesses_destroy
      description: Viewset for business profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this business profile.
        required: true
      tags:
      - businesses
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/listings/:
    get:
      operationId: listings_list
      description: Viewset for marketplace listings.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - listings
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListingAutoList'
          description: ''
    post:
      operationId: listings_create
      description: Viewset for marketplace listings.
      tags:
      - listings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListingAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ListingAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingAuto'
          description: ''
  /api/v1/listings/{id}/:
    get:
      operationId: listings_retrieve
      description: Viewset for marketplace listings.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - listings
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingAuto'
          description: ''
    put:
      operationId: listings_update
      description: Viewset for marketplace listings.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - listings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListingAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ListingAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingAuto'
          description: ''
    patch:
      operationId: listings_partial_update
      description: Viewset for marketplace listings.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - listings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedListingAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedListingAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedListingAutoRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingAuto'
          description: ''
    delete:
      operationId: listings_destroy
      description: Viewset for marketplace listings.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - listings
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/notifications/:
    get:
      operationId: notifications_list
      description: Viewset for user notifications.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - notifications
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationAutoList'
          description: ''
    post:
      operationId: notifications_create
      description: Viewset for user notifications.
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationAuto'
          description: ''
  /api/v1/notifications/{id}/:
    get:
      operationId: notifications_retrieve
      description: Viewset for user notifications.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationAuto'
          description: ''
    put:
      operationId: notifications_update
      description: Viewset for user notifications.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationAuto'
          description: ''
    patch:
      operationId: notifications_partial_update
      description: Viewset for user notifications.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationAutoRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationAuto'
          description: ''
    delete:
      operationId: notifications_destroy
      description: Viewset for user notifications.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/notifications/send-test/:
    post:
      operationId: notifications_send_test_create
      description: Viewset for user notifications.
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationAuto'
          description: ''
  /api/v1/payments/:
    get:
      operationId: payments_list
      description: Viewset for payment transactions.
      parameters:
      - in: query
        name: amount
        schema:
          type: number
      - in: query
        name: appointment
        schema:
          type: integer
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: currency
        schema:
          type: string
      - in: query
        name: external_reference
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      tags:
      - payments
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentTransactionAutoList'
          description: ''
    post:
      operationId: payments_create
      description: Viewset for payment transactions.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentTransactionAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentTransactionAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTransactionAuto'
          description: ''
  /api/v1/payments/{id}/:
    get:
      operationId: payments_retrieve
      description: Viewset for payment transactions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment transaction.
        required: true
      tags:
      - payments
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTransactionAuto'
          description: ''
    put:
      operationId: payments_update
      description: Viewset for payment transactions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment transaction.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentTransactionAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentTransactionAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTransactionAuto'
          description: ''
    patch:
      operationId: payments_partial_update
      description: Viewset for payment transactions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment transaction.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentTransactionAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentTransactionAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentTransactionAutoRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTransactionAuto'
          description: ''
    delete:
      operationId: payments_destroy
      description: Viewset for payment transactions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment transaction.
        required: true
      tags:
      - payments
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/payments/{id}/capture/:
    post:
      operationId: payments_capture_create
      description: Viewset for payment transactions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment transaction.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentTransactionAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentTransactionAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTransactionAuto'
          description: ''
  /api/v1/services/:
    get:
      operationId: services_list
      description: Viewset for services offered by businesses.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - services
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceAutoList'
          description: ''
    post:
      operationId: services_create
      description: Viewset for services offered by businesses.
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAuto'
          description: ''
  /api/v1/services/{id}/:
    get:
      operationId: services_retrieve
      description: Viewset for services offered by businesses.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - services
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAuto'
          description: ''
    put:
      operationId: services_update
      description: Viewset for services offered by businesses.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAuto'
          description: ''
    patch:
      operationId: services_partial_update
      description: Viewset for services offered by businesses.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceAutoRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAuto'
          description: ''
    delete:
      operationId: services_destroy
      description: Viewset for services offered by businesses.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - services
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: users_list
      description: Viewset for user accounts.
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: full_name
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      tags:
      - users
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserAutoList'
          description: ''
    post:
      operationId: users_create
      description: Viewset for user accounts.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuto'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: users_retrieve
      description: Viewset for user accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuto'
          description: ''
    put:
      operationId: users_update
      description: Viewset for user accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAutoRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuto'
          description: ''
    patch:
      operationId: users_partial_update
      description: Viewset for user accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAutoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAutoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAutoRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuto'
          description: ''
    delete:
      operationId: users_destroy
      description: Viewset for user accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AppointmentAuto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer:
          type: integer
        business:
          type: integer
        service:
          type: integer
        scheduled_for:
          type: string
          format: date-time
        status:
          type: string
          maxLength: 50
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - business
      - created_at
      - customer
      - id
      - scheduled_for
      - service
      - updated_at
    AppointmentAutoRequest:
      type: object
      properties:
        customer:
          type: integer
        business:
          type: integer
        service:
          type: integer
        scheduled_for:
          type: string
          format: date-time
        status:
          type: string
          minLength: 1
          maxLength: 50
        notes:
          type: string
      required:
      - business
      - customer
      - scheduled_for
      - service
    BusinessProfileAuto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - owner
      - updated_at
    BusinessProfileAutoRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
      required:
      - name
    ListingAuto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        business:
          type: integer
        service:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - business
      - created_at
      - id
      - price
      - service
      - updated_at
    ListingAutoRequest:
      type: object
      properties:
        business:
          type: integer
        service:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_active:
          type: boolean
      required:
      - business
      - price
      - service
    NotificationAuto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        recipient:
          type: integer
        subject:
          type: string
          maxLength: 255
        body:
          type: string
        read_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - body
      - created_at
      - id
      - read_at
      - recipient
      - subject
      - updated_at
    NotificationAutoRequest:
      type: object
      properties:
        recipient:
          type: integer
        subject:
          type: string
          minLength: 1
          maxLength: 255
        body:
          type: string
          minLength: 1
      required:
      - body
      - recipient
      - subject
    PaginatedAppointmentAutoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentAuto'
    PaginatedBusinessProfileAutoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProfileAuto'
    PaginatedListingAutoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListingAuto'
    PaginatedNotificationAutoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationAuto'
    PaginatedPaymentTransactionAutoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionAuto'
    PaginatedServiceAutoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceAuto'
    PaginatedUserAutoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserAuto'
    PatchedAppointmentAutoRequest:
      type: object
      properties:
        customer:
          type: integer
        business:
          type: integer
        service:
          type: integer
        scheduled_for:
          type: string
          format: date-time
        status:
          type: string
          minLength: 1
          maxLength: 50
        notes:
          type: string
    PatchedBusinessProfileAutoRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
    PatchedListingAutoRequest:
      type: object
      properties:
        business:
          type: integer
        service:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_active:
          type: boolean
    PatchedNotificationAutoRequest:
      type: object
      properties:
        recipient:
          type: integer
        subject:
          type: string
          minLength: 1
          maxLength: 255
        body:
          type: string
          minLength: 1
    PatchedPaymentTransactionAutoRequest:
      type: object
      properties:
        appointment:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
          minLength: 1
          maxLength: 10
    PatchedServiceAutoRequest:
      type: object
      properties:
        business:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
    PatchedUserAutoRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        full_name:
          type: string
          maxLength: 255
    PaymentTransactionAuto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        appointment:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 10
        status:
          type: string
          readOnly: true
        external_reference:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - appointment
      - created_at
      - external_reference
      - id
      - status
      - updated_at
    PaymentTransactionAutoRequest:
      type: object
      properties:
        appointment:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
          minLength: 1
          maxLength: 10
      required:
      - amount
      - appointment
    ServiceAuto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        business:
          type: integer
        name:
          type: string
          maxLength: 255
        description:
          type: string
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - business
      - created_at
      - id
      - name
      - updated_at
    ServiceAutoRequest:
      type: object
      properties:
        business:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - business
      - name
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    UserAuto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        full_name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - id
      - is_active
      - updated_at
    UserAutoRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        full_name:
          type: string
          maxLength: 255
      required:
      - email
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
